{"version":3,"sources":["components/NavBar/NavBar.module.css","components/ConfirmedTable/ConfirmedTable.module.css","covid.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/ConfirmedTable/ConfirmedTable.jsx","components/RecoveredTable/RecoveredTable.jsx","components/DeathsTable/DeathsTable.jsx","components/NavBar/NavigationBar.jsx","App.js","index.js","components/Cards/Cards.module.css","components/RecoveredTable/RecoveredTable.module.css","components/DeathsTable/DeathsTable.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","StylesProvider","container","Grid","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","console","log","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","animation","easing","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","ConfirmedTable","props","state","items","isLoaded","fetch","then","res","json","setState","this","russia","china","brazil","sweden","germany","italy","japan","peru","chile","canada","mexico","spain","ukraine","colombia","us","uk","india","fiveLarge","largeFive","worldcases","countryRegion","newCount","newCountry","length","pieChart","stats","three","containL","tbl","head","toFixed","chartR","Component","RecoveredTable","fiveRecover","recoverFive","worldRecover","stat","hthree","contain","tabl","chart","DeathsTable","worlddeaths","containR","tble","charts","NavigationBar","body","id","type","header","links","active","href","notactive","htmlFor","iconB","line","App","totalContain","CountryPicker","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da75ddc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"NavBar_body__2IKaE\",\"header\":\"NavBar_header__1WYgd\",\"container\":\"NavBar_container__Vkp03\",\"links\":\"NavBar_links__3dj0i\",\"notactive\":\"NavBar_notactive__23bjy\",\"active\":\"NavBar_active__Otv9w\",\"iconB\":\"NavBar_iconB__2y-15\",\"line\":\"NavBar_line__3WsoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tbl\":\"ConfirmedTable_tbl__3hb5_\",\"three\":\"ConfirmedTable_three__mCoyX\",\"head\":\"ConfirmedTable_head__a03i5\",\"chartR\":\"ConfirmedTable_chartR__3oyUI\",\"stats\":\"ConfirmedTable_stats__35Tfi\",\"containL\":\"ConfirmedTable_containL__21QY-\"};","module.exports = __webpack_public_path__ + \"static/media/covid.70876784.png\";","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup'; \r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return(\r\n        <div className={StylesProvider.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>                       \r\n                         <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths as a result of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  console.log(Chart);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value,],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current situation in ${country}` },\r\n          animation: { duration: 1000, easing: 'linear'},\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n        options={{\r\n          title: { display: true, text: `Current situation in the World` },\r\n          animation: {duration: 4000, easing: 'linear'},\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nconsole.log(Countries);\r\n\r\nexport default Countries;","import React, { Component } from \"react\";\r\nimport styles from \"./ConfirmedTable.module.css\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nclass ConfirmedTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://covid19.mathdro.id/api/confirmed\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: json,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    var { isLoaded, items } = this.state;\r\n\r\n    if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      var russia = 0;\r\n      var china = 0;\r\n      var brazil = 0;\r\n      var sweden = 0;\r\n      var germany = 0;\r\n      var italy = 0;\r\n      var japan = 0;\r\n      var peru = 0;\r\n      var chile = 0;\r\n      var canada = 0;\r\n      var mexico = 0;\r\n      var spain = 0;\r\n      var ukraine = 0;\r\n      var colombia = 0;\r\n      var us = 0;\r\n      var uk = 0;\r\n      var india = 0;\r\n\r\n      var fiveLarge = [0, 0, 0, 0, 0];\r\n      var largeFive = [\"a\", \"a\", \"a\", \"a\", \"a\"];\r\n      var worldcases = 0;\r\n\r\n      {\r\n        items.map((item) => {\r\n          worldcases = worldcases + item.confirmed;\r\n          if (item.confirmed > fiveLarge[4]) {\r\n            if (item.confirmed > fiveLarge[3]) {\r\n              if (item.confirmed > fiveLarge[2]) {\r\n                if (item.confirmed > fiveLarge[1]) {\r\n                  if (item.confirmed > fiveLarge[0]) {\r\n                    // fiveLarge[0] = 5;\r\n                    fiveLarge[0] = item.confirmed;\r\n                    largeFive[0] = item.countryRegion;\r\n                  } else {\r\n                    fiveLarge[1] = item.confirmed;\r\n                    largeFive[1] = item.countryRegion;\r\n                  }\r\n                } else {\r\n                  fiveLarge[2] = item.confirmed;\r\n                  largeFive[2] = item.countryRegion;\r\n                }\r\n              } else {\r\n                fiveLarge[3] = item.confirmed;\r\n                largeFive[3] = item.countryRegion;\r\n              }\r\n            } else {\r\n              fiveLarge[4] = item.confirmed;\r\n              largeFive[4] = item.countryRegion;\r\n            }\r\n          }\r\n          if (item.countryRegion === \"Russia\") {\r\n            russia = russia + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"China\") {\r\n            china = china + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Brazil\") {\r\n            brazil = brazil + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Sweden\") {\r\n            sweden = sweden + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Germany\") {\r\n            germany = germany + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Italy\") {\r\n            italy = italy + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Japan\") {\r\n            japan = japan + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Peru\") {\r\n            peru = peru + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Chile\") {\r\n            chile = chile + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Canada\") {\r\n            canada = canada + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Mexico\") {\r\n            mexico = mexico + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Spain\") {\r\n            spain = spain + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Ukraine\") {\r\n            ukraine = ukraine + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"Colombia\") {\r\n            colombia = colombia + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"US\") {\r\n            us = us + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"India\") {\r\n            india = india + item.confirmed;\r\n          }\r\n          if (item.countryRegion === \"United Kingdom\") {\r\n            uk = uk + item.confirmed;\r\n          }\r\n        });\r\n      }\r\n\r\n      {\r\n        items.map((item) => {\r\n          var newCount = [\r\n            russia,\r\n            china,\r\n            brazil,\r\n            sweden,\r\n            germany,\r\n            italy,\r\n            japan,\r\n            peru,\r\n            chile,\r\n            canada,\r\n            mexico,\r\n            spain,\r\n            ukraine,\r\n            colombia,\r\n            us,\r\n            uk,\r\n            india,\r\n          ];\r\n          var newCountry = [\r\n            \"Russia\",\r\n            \"China\",\r\n            \"Brazil\",\r\n            \"Sweden\",\r\n            \"Germany\",\r\n            \"Italy\",\r\n            \"Japan\",\r\n            \"Peru\",\r\n            \"Chile\",\r\n            \"Canada\",\r\n            \"Mexico\",\r\n            \"Spain\",\r\n            \"Ukraine\",\r\n            \"Colombia\",\r\n            \"United States\",\r\n            \"United Kingdom\",\r\n            \"India\",\r\n          ];\r\n\r\n          for (let i = 0; i < newCount.length; i++) {\r\n            if (\r\n              newCount[i] > fiveLarge[4] &&\r\n              newCount[i] !== fiveLarge[0] &&\r\n              newCount[i] !== fiveLarge[1] &&\r\n              newCount[i] !== fiveLarge[2] &&\r\n              newCount[i] !== fiveLarge[3]\r\n            ) {\r\n              if (newCount[i] > fiveLarge[3]) {\r\n                if (newCount[i] > fiveLarge[2]) {\r\n                  if (newCount[i] > fiveLarge[1]) {\r\n                    if (newCount[i] > fiveLarge[0]) {\r\n                      // fiveLarge[0] = 5;\r\n                      fiveLarge[4] = fiveLarge[3];\r\n                      largeFive[4] = largeFive[3];\r\n                      fiveLarge[3] = fiveLarge[2];\r\n                      largeFive[3] = largeFive[2];\r\n                      fiveLarge[2] = fiveLarge[1];\r\n                      largeFive[2] = largeFive[1];\r\n                      fiveLarge[1] = fiveLarge[0];\r\n                      largeFive[1] = largeFive[0];\r\n                      fiveLarge[0] = newCount[i];\r\n                      largeFive[0] = newCountry[i];\r\n                    } else {\r\n                      fiveLarge[4] = fiveLarge[3];\r\n                      largeFive[4] = largeFive[3];\r\n                      fiveLarge[3] = fiveLarge[2];\r\n                      largeFive[3] = largeFive[2];\r\n                      fiveLarge[2] = fiveLarge[1];\r\n                      largeFive[2] = largeFive[1];\r\n                      fiveLarge[1] = newCount[i];\r\n                      largeFive[1] = newCountry[i];\r\n                    }\r\n                  } else {\r\n                    fiveLarge[4] = fiveLarge[3];\r\n                    largeFive[4] = largeFive[3];\r\n                    fiveLarge[3] = fiveLarge[2];\r\n                    largeFive[3] = largeFive[2];\r\n                    fiveLarge[2] = newCount[i];\r\n                    largeFive[2] = newCountry[i];\r\n                  }\r\n                } else {\r\n                  fiveLarge[4] = fiveLarge[3];\r\n                  largeFive[4] = largeFive[3];\r\n                  fiveLarge[3] = newCount[i];\r\n                  largeFive[3] = newCountry[i];\r\n                }\r\n              } else {\r\n                fiveLarge[4] = newCount[i];\r\n                largeFive[4] = newCountry[i];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      const pieChart = (\r\n        <Pie\r\n          data={{\r\n            labels: [\r\n              largeFive[0],\r\n              largeFive[1],\r\n              largeFive[2],\r\n              largeFive[3],\r\n              largeFive[4],\r\n              \"Rest of the World\",\r\n            ],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  (fiveLarge[0] / worldcases) * 100,\r\n                  (fiveLarge[1] / worldcases) * 100,\r\n                  (fiveLarge[2] / worldcases) * 100,\r\n                  (fiveLarge[3] / worldcases) * 100,\r\n                  (fiveLarge[4] / worldcases) * 100,\r\n                  100 -\r\n                    ((fiveLarge[0] / worldcases) * 100 +\r\n                      (fiveLarge[1] / worldcases) * 100 +\r\n                      (fiveLarge[2] / worldcases) * 100 +\r\n                      (fiveLarge[3] / worldcases) * 100 +\r\n                      (fiveLarge[4] / worldcases) * 100),\r\n                ],\r\n                backgroundColor: [\r\n                  \"rgba(220, 20, 60, 0.7)\",\r\n                  \"rgba(72, 61, 139, 0.7)\",\r\n                  \"rgba(34, 139, 34, 0.7)\",\r\n                  \"rgba(255, 215, 0, 0.7)\",\r\n                  \"rgba(218, 112, 214, 0.7)\",\r\n                  \"rgba(30, 144, 255, 0.7)\",\r\n                ],\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      );\r\n\r\n      return (\r\n        <div className={styles.india}>\r\n          {/* <ul> */}\r\n          {/* <li>Country: Russia | Cases: {russia}</li>\r\n                            <li>Country: China | Cases: {china}</li>\r\n                            <li>Country: Brazil | Cases: {brazil}</li>\r\n                            <li>Country: Sweden | Cases: {sweden}</li>\r\n                            <li>Country: Germany | Cases: {germany}</li>\r\n                            <li>Country: Italy | Cases: {italy}</li>\r\n                            <li>Country: Japan | Cases: {japan}</li>\r\n                            <li>Country: Peru | Cases: {peru}</li>\r\n                            <li>Country: Chile | Cases: {chile}</li>\r\n                            <li>Country: Canada | Cases: {canada}</li>\r\n                            <li>Country: Mexico | Cases: {mexico}</li>\r\n                            <li>Country: Spain | Cases: {spain}</li>\r\n                            <li>Country: Ukraine | Cases: {ukraine}</li>\r\n                            <li>Country: Colombia | Cases: {colombia}</li>\r\n                            <li>Country: United States | Cases: {us}}</li>\r\n                            <li>{fiveLarge} + {largeFive}</li>\r\n                    </ul> */}\r\n          <div className={styles.stats}>\r\n            <h3 className={styles.three}>Most COVID-19 Infections</h3>\r\n            <div className={styles.containL}>\r\n              <table className={styles.tbl}>\r\n                <thead>\r\n                  <tr>\r\n                    <th className={styles.head}>Country</th>\r\n                    <th className={styles.head}>COVID-19 Cases</th>\r\n                    <th className={styles.head}>% of World Cases</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{largeFive[0]}</td>\r\n                    <td>{fiveLarge[0]}</td>\r\n                    <td>{((fiveLarge[0] / worldcases) * 100).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{largeFive[1]}</td>\r\n                    <td>{fiveLarge[1]}</td>\r\n                    <td>{((fiveLarge[1] / worldcases) * 100).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{largeFive[2]}</td>\r\n                    <td>{fiveLarge[2]}</td>\r\n                    <td>{((fiveLarge[2] / worldcases) * 100).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{largeFive[3]}</td>\r\n                    <td>{fiveLarge[3]}</td>\r\n                    <td>{((fiveLarge[3] / worldcases) * 100).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{largeFive[4]}</td>\r\n                    <td>{fiveLarge[4]}</td>\r\n                    <td>{((fiveLarge[4] / worldcases) * 100).toFixed(2)}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className={styles.chartR}> {pieChart}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ConfirmedTable;\r\n","import React, { Component } from 'react';\r\nimport styles from './RecoveredTable.module.css';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nclass RecoveredTable extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://covid19.mathdro.id/api/recovered')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        var { isLoaded, items } = this.state;;\r\n\r\n        if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        else{\r\n\r\n            var russia = 0;\r\n            var china = 0;\r\n            var brazil = 0;\r\n            var sweden = 0;\r\n            var germany = 0;\r\n            var italy = 0;\r\n            var japan = 0;\r\n            var peru = 0;\r\n            var chile = 0;\r\n            var canada = 0;\r\n            var mexico = 0;\r\n            var spain = 0;\r\n            var ukraine = 0;\r\n            var colombia = 0;\r\n            var uk = 0;\r\n\r\n            var fiveRecover = [0,0,0,0,0];\r\n            var recoverFive =[\"a\",\"a\",\"a\",\"a\", \"a\"];\r\n            var worldRecover = 0;\r\n\r\n            {items.map(item => {\r\n                worldRecover = worldRecover + item.recovered;\r\n\r\n                if(item.recovered > fiveRecover[4]){\r\n                    if(item.recovered > fiveRecover[3]){\r\n                        if(item.recovered > fiveRecover[2]){\r\n                            if(item.recovered > fiveRecover[1]){\r\n                                if(item.recovered > fiveRecover[0]){\r\n                                    // fiveRecover[0] = 5;\r\n                                    fiveRecover[0]= item.recovered;\r\n                                    recoverFive[0] = item.countryRegion;\r\n                                }\r\n                                else{\r\n                                    fiveRecover[1] = item.recovered;\r\n                                    recoverFive[1] = item.countryRegion;\r\n                                }\r\n                            }\r\n                            else{\r\n                                fiveRecover[2] = item.recovered;\r\n                                recoverFive[2] = item.countryRegion;\r\n                            }\r\n                        }\r\n                        else{\r\n                            fiveRecover[3] = item.recovered;\r\n                            recoverFive[3] = item.countryRegion;\r\n                        }\r\n\r\n                    }\r\n                    else{\r\n                        fiveRecover[4] = item.recovered;\r\n                        recoverFive[4] = item.countryRegion;\r\n                    }\r\n                }\r\n\r\n                if(item.countryRegion === \"Russia\"){\r\n                    russia = russia + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"China\"){\r\n                    china = china + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Brazil\"){\r\n                    brazil = brazil + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Sweden\"){\r\n                    sweden = sweden + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Germany\"){\r\n                    germany = germany + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Italy\"){\r\n                    italy = italy + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Japan\"){\r\n                    japan = japan + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Peru\"){\r\n                    peru = peru + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Chile\"){\r\n                    chile = chile + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Canada\"){\r\n                    canada = canada + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Mexico\"){\r\n                    mexico = mexico + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Spain\"){\r\n                    spain = spain + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Ukraine\"){\r\n                    ukraine = ukraine + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"Colombia\"){\r\n                    colombia = colombia + item.recovered;\r\n                }\r\n                if(item.countryRegion === \"United Kingdom\"){\r\n                    uk = uk + item.recovered;\r\n                }\r\n\r\n                // if(item.provinceState === null || item.provinceState === \"Recovered\"){\r\n                //     return <li key={item.id}> Country: {item.countryRegion} | CoolRecovered: {item.recovered}</li>\r\n                // }\r\n            })}\r\n\r\n            {items.map(item => {\r\n                var newCount = [russia, china, brazil, sweden, germany, italy, japan, peru, chile, canada, mexico, spain, ukraine, colombia, uk];\r\n                var newCountry = ['Russia', 'China', 'Brazil', 'Sweden', 'Germany', 'Italy', 'Japan', 'Peru', 'Chile', 'Canada', 'Mexico', 'Spain', 'Ukraine', 'Colombia', 'United Kingdom'];\r\n\r\n                for(let i = 0; i < newCount.length; i++){\r\n                    if(newCount[i] > fiveRecover[4] && newCount[i] !== fiveRecover[0] && newCount[i] !== fiveRecover[1] && newCount[i] !== fiveRecover[2] && newCount[i] !== fiveRecover[3]){\r\n                        if(newCount[i] > fiveRecover[3]){\r\n                            if(newCount[i] > fiveRecover[2]){\r\n                                if(newCount[i] > fiveRecover[1]){\r\n                                    if(newCount[i] > fiveRecover[0]){\r\n                                        // fiveRecover[0] = 5;\r\n                                        fiveRecover[4] = fiveRecover[3];\r\n                                        recoverFive[4] = recoverFive[3];\r\n                                        fiveRecover[3] = fiveRecover[2];\r\n                                        recoverFive[3] = recoverFive[2];\r\n                                        fiveRecover[2] = fiveRecover[1];\r\n                                        recoverFive[2] = recoverFive[1];\r\n                                        fiveRecover[1] = fiveRecover[0];\r\n                                        recoverFive[1] = recoverFive[0];\r\n                                        fiveRecover[0] = newCount[i];\r\n                                        recoverFive[0] = newCountry[i];\r\n                                    }\r\n                                    else{\r\n                                        fiveRecover[4] = fiveRecover[3];\r\n                                        recoverFive[4] = recoverFive[3];\r\n                                        fiveRecover[3] = fiveRecover[2];\r\n                                        recoverFive[3] = recoverFive[2];\r\n                                        fiveRecover[2] = fiveRecover[1];\r\n                                        recoverFive[2] = recoverFive[1];\r\n                                        fiveRecover[1] = newCount[i];\r\n                                        recoverFive[1] = newCountry[i];\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    fiveRecover[4] = fiveRecover[3];\r\n                                    recoverFive[4] = recoverFive[3];\r\n                                    fiveRecover[3] = fiveRecover[2];\r\n                                    recoverFive[3] = recoverFive[2];\r\n                                    fiveRecover[2] = newCount[i];\r\n                                    recoverFive[2] = newCountry[i];\r\n                                }\r\n                            }\r\n                            else{\r\n                                fiveRecover[4] = fiveRecover[3];\r\n                                recoverFive[4] = recoverFive[3];\r\n                                fiveRecover[3] = newCount[i];\r\n                                recoverFive[3] = newCountry[i];\r\n                            }\r\n\r\n                        }\r\n                        else{\r\n                            fiveRecover[4] = newCount[i];\r\n                            recoverFive[4] = newCountry[i];\r\n                        }\r\n                    }\r\n                }\r\n            })}\r\n\r\n            const pieChart = (\r\n                <Pie \r\n                    data={{\r\n                        labels: [recoverFive[0], recoverFive[1], recoverFive[2], recoverFive[3], recoverFive[4], 'Rest of the World'],\r\n                        datasets: [{\r\n                            data: [(fiveRecover[0] / worldRecover) * 100, (fiveRecover[1] / worldRecover) * 100, (fiveRecover[2] / worldRecover) * 100, (fiveRecover[3] / worldRecover) * 100, (fiveRecover[4] / worldRecover) * 100, 100 - ((fiveRecover[0] / worldRecover) * 100 + (fiveRecover[1] / worldRecover) * 100 + (fiveRecover[2] / worldRecover) * 100 + (fiveRecover[3] / worldRecover) * 100 + (fiveRecover[4] / worldRecover) * 100)],\r\n                            backgroundColor: ['rgba(220, 20, 60, 0.7)', 'rgba(72, 61, 139, 0.7)', 'rgba(34, 139, 34, 0.7)', 'rgba(255, 215, 0, 0.7)', 'rgba(218, 112, 214, 0.7)', 'rgba(30, 144, 255, 0.7)'],\r\n                        }] \r\n                    }}\r\n                />\r\n            )\r\n\r\n            return(\r\n                <div className={styles.india}>                    \r\n                    {/* <ul> */}\r\n                            {/* <li>Country: Russia | Cases: {russia}</li>\r\n                            <li>Country: China | Cases: {china}</li>\r\n                            <li>Country: Brazil | Cases: {brazil}</li>\r\n                            <li>Country: Sweden | Cases: {sweden}</li>\r\n                            <li>Country: Germany | Cases: {germany}</li>\r\n                            <li>Country: Italy | Cases: {italy}</li>\r\n                            <li>Country: Japan | Cases: {japan}</li>\r\n                            <li>Country: Peru | Cases: {peru}</li>\r\n                            <li>Country: Chile | Cases: {chile}</li>\r\n                            <li>Country: Canada | Cases: {canada}</li>\r\n                            <li>Country: Mexico | Cases: {mexico}</li>\r\n                            <li>Country: Spain | Cases: {spain}</li>\r\n                            <li>Country: Ukraine | Cases: {ukraine}</li>\r\n                            <li>Country: Colombia | Cases: {colombia}</li>\r\n                            <li>Country: United Kingdom | Cases: {uk}</li>\r\n                    </ul> */}\r\n                    <div className={styles.stat}>\r\n                        <h3 className={styles.hthree}>Most COVID-19 Recoveries</h3>\r\n                        <div className={styles.contain}>\r\n                            <table className={styles.tabl}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Country</th>\r\n                                        <th>COVID-19 Recoveried</th> \r\n                                        <th>% of World Recoveries</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{recoverFive[0]}</td>\r\n                                        <td>{fiveRecover[0]}</td>\r\n                                        <td>{((fiveRecover[0] / worldRecover) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{recoverFive[1]}</td>\r\n                                        <td>{fiveRecover[1]}</td>\r\n                                        <td>{((fiveRecover[1] / worldRecover) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{recoverFive[2]}</td>\r\n                                        <td>{fiveRecover[2]}</td>\r\n                                        <td>{((fiveRecover[2] / worldRecover) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{recoverFive[3]}</td>\r\n                                        <td>{fiveRecover[3]}</td>\r\n                                        <td>{((fiveRecover[3] / worldRecover) * 100).toFixed(2)}</td>\r\n                                    </tr>                           \r\n                                    <tr>\r\n                                        <td>{recoverFive[4]}</td>\r\n                                        <td>{fiveRecover[4]}</td>\r\n                                        <td>{((fiveRecover[4] / worldRecover) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className={styles.chart}>\r\n                            {pieChart}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default RecoveredTable;","import React, { Component } from 'react';\r\nimport styles from './DeathsTable.module.css';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\n\r\nclass DeathsTable extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://covid19.mathdro.id/api/deaths')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n\r\n    }\r\n    render(){\r\n\r\n        var { isLoaded, items } = this.state;\r\n\r\n        if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        else{\r\n            var russia = 0;\r\n            var china = 0;\r\n            var brazil = 0;\r\n            var sweden = 0;\r\n            var germany = 0;\r\n            var italy = 0;\r\n            var japan = 0;\r\n            var peru = 0;\r\n            var chile = 0;\r\n            var canada = 0;\r\n            var mexico = 0;\r\n            var spain = 0;\r\n            var ukraine = 0;\r\n            var colombia = 0;\r\n            var us = 0;\r\n\r\n            var fiveLarge = [0,0,0,0,0];\r\n            var largeFive =[\"a\",\"a\",\"a\",\"a\", \"a\"];\r\n            var worlddeaths = 0;\r\n\r\n            {items.map(item => {\r\n                worlddeaths = worlddeaths + item.deaths;\r\n                if(item.deaths > fiveLarge[4]){\r\n                    if(item.deaths > fiveLarge[3]){\r\n                        if(item.deaths > fiveLarge[2]){\r\n                            if(item.deaths > fiveLarge[1]){\r\n                                if(item.deaths > fiveLarge[0]){\r\n                                    // fiveLarge[0] = 5;\r\n                                    fiveLarge[0]= item.deaths;\r\n                                    largeFive[0] = item.countryRegion;\r\n                                }\r\n                                else{\r\n                                    fiveLarge[1] = item.deaths;\r\n                                    largeFive[1] = item.countryRegion;\r\n                                }\r\n                            }\r\n                            else{\r\n                                fiveLarge[2] = item.deaths;\r\n                                largeFive[2] = item.countryRegion;\r\n                            }\r\n                        }\r\n                        else{\r\n                            fiveLarge[3] = item.deaths;\r\n                            largeFive[3] = item.countryRegion;\r\n                        }\r\n\r\n                    }\r\n                    else{\r\n                        fiveLarge[4] = item.deaths;\r\n                        largeFive[4] = item.countryRegion;\r\n                    }\r\n                }\r\n                if(item.countryRegion === \"Russia\"){\r\n                    russia = russia + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"China\"){\r\n                    china = china + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Brazil\"){\r\n                    brazil = brazil + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Sweden\"){\r\n                    sweden = sweden + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Germany\"){\r\n                    germany = germany + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Italy\"){\r\n                    italy = italy + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Japan\"){\r\n                    japan = japan + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Peru\"){\r\n                    peru = peru + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Chile\"){\r\n                    chile = chile + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Canada\"){\r\n                    canada = canada + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Mexico\"){\r\n                    mexico = mexico + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Spain\"){\r\n                    spain = spain + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Ukraine\"){\r\n                    ukraine = ukraine + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"Colombia\"){\r\n                    colombia = colombia + item.deaths;\r\n                }\r\n                if(item.countryRegion === \"US\"){\r\n                    us = us + item.deaths;\r\n                }\r\n\r\n                // if(item.provinceState === null){\r\n                // return <li key={item.id}> Country: {item.countryRegion} | Cases: {item.deaths} | Recovered: {item.recovered}</li>\r\n                // }\r\n            })}\r\n            {items.map(item => {\r\n                var newCount = [russia, china, brazil, sweden, germany, italy, japan, peru, chile, canada, mexico, spain, ukraine, colombia, us];\r\n                var newCountry = ['Russia', 'China', 'Brazil', 'Sweden', 'Germany', 'Italy', 'Japan', 'Peru', 'Chile', 'Canada', 'Mexico', 'Spain', 'Ukraine', 'Colombia', 'United States'];\r\n\r\n                for(let i = 0; i < newCount.length; i++){\r\n                    if(newCount[i] > fiveLarge[4] && newCount[i] !== fiveLarge[0] && newCount[i] !== fiveLarge[1] && newCount[i] !== fiveLarge[2] && newCount[i] !== fiveLarge[3]){\r\n                        if(newCount[i] > fiveLarge[3]){\r\n                            if(newCount[i] > fiveLarge[2]){\r\n                                if(newCount[i] > fiveLarge[1]){\r\n                                    if(newCount[i] > fiveLarge[0]){\r\n                                        // fiveLarge[0] = 5;\r\n                                        fiveLarge[4] = fiveLarge[3];\r\n                                        largeFive[4] = largeFive[3];\r\n                                        fiveLarge[3] = fiveLarge[2];\r\n                                        largeFive[3] = largeFive[2];\r\n                                        fiveLarge[2] = fiveLarge[1];\r\n                                        largeFive[2] = largeFive[1];\r\n                                        fiveLarge[1] = fiveLarge[0];\r\n                                        largeFive[1] = largeFive[0];\r\n                                        fiveLarge[0] = newCount[i];\r\n                                        largeFive[0] = newCountry[i];\r\n                                    }\r\n                                    else{\r\n                                        fiveLarge[4] = fiveLarge[3];\r\n                                        largeFive[4] = largeFive[3];\r\n                                        fiveLarge[3] = fiveLarge[2];\r\n                                        largeFive[3] = largeFive[2];\r\n                                        fiveLarge[2] = fiveLarge[1];\r\n                                        largeFive[2] = largeFive[1];\r\n                                        fiveLarge[1] = newCount[i];\r\n                                        largeFive[1] = newCountry[i];\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    fiveLarge[4] = fiveLarge[3];\r\n                                    largeFive[4] = largeFive[3];\r\n                                    fiveLarge[3] = fiveLarge[2];\r\n                                    largeFive[3] = largeFive[2];\r\n                                    fiveLarge[2] = newCount[i];\r\n                                    largeFive[2] = newCountry[i];\r\n                                }\r\n                            }\r\n                            else{\r\n                                fiveLarge[4] = fiveLarge[3];\r\n                                largeFive[4] = largeFive[3];\r\n                                fiveLarge[3] = newCount[i];\r\n                                largeFive[3] = newCountry[i];\r\n                            }\r\n\r\n                        }\r\n                        else{\r\n                            fiveLarge[4] = newCount[i];\r\n                            largeFive[4] = newCountry[i];\r\n                        }\r\n                    }\r\n                }\r\n            })}\r\n\r\n            const pieChart = (\r\n                <Pie \r\n                    data={{\r\n                        labels: [largeFive[0], largeFive[1], largeFive[2], largeFive[3], largeFive[4], 'Rest of the World'],\r\n                        datasets: [{\r\n                            data: [(fiveLarge[0] / worlddeaths) * 100, (fiveLarge[1] / worlddeaths) * 100, (fiveLarge[2] / worlddeaths) * 100, (fiveLarge[3] / worlddeaths) * 100, (fiveLarge[4] / worlddeaths) * 100, 100 - ((fiveLarge[0] / worlddeaths) * 100 + (fiveLarge[1] / worlddeaths) * 100 + (fiveLarge[2] / worlddeaths) * 100 + (fiveLarge[3] / worlddeaths) * 100 + (fiveLarge[4] / worlddeaths) * 100)],\r\n                            backgroundColor: ['rgba(220, 20, 60, 0.7)', 'rgba(72, 61, 139, 0.7)', 'rgba(34, 139, 34, 0.7)', 'rgba(255, 215, 0, 0.7)', 'rgba(218, 112, 214, 0.7)', 'rgba(30, 144, 255, 0.7)'],\r\n                        }] \r\n                    }}\r\n                />\r\n            )\r\n\r\n            return(\r\n                <div className={styles.india}>                    \r\n                    {/* <ul> */}\r\n                            {/* <li>Country: Russia | Cases: {russia}</li>\r\n                            <li>Country: China | Cases: {china}</li>\r\n                            <li>Country: Brazil | Cases: {brazil}</li>\r\n                            <li>Country: Sweden | Cases: {sweden}</li>\r\n                            <li>Country: Germany | Cases: {germany}</li>\r\n                            <li>Country: Italy | Cases: {italy}</li>\r\n                            <li>Country: Japan | Cases: {japan}</li>\r\n                            <li>Country: Peru | Cases: {peru}</li>\r\n                            <li>Country: Chile | Cases: {chile}</li>\r\n                            <li>Country: Canada | Cases: {canada}</li>\r\n                            <li>Country: Mexico | Cases: {mexico}</li>\r\n                            <li>Country: Spain | Cases: {spain}</li>\r\n                            <li>Country: Ukraine | Cases: {ukraine}</li>\r\n                            <li>Country: Colombia | Cases: {colombia}</li>\r\n                            <li>Country: United States | Cases: {us}}</li>\r\n                            <li>{fiveLarge} + {largeFive}</li>\r\n                    </ul> */}\r\n                    <div className={styles.stats}>\r\n                        <h3 className={styles.three}>Most COVID-19 Deaths</h3>\r\n                        <div className={styles.containR}>\r\n                            <table className={styles.tble}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Country</th>\r\n                                        <th>COVID-19 Deaths</th> \r\n                                        <th>% of World Deaths</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{largeFive[0]}</td>\r\n                                        <td>{fiveLarge[0]}</td>\r\n                                        <td>{((fiveLarge[0] / worlddeaths) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{largeFive[1]}</td>\r\n                                        <td>{fiveLarge[1]}</td>\r\n                                        <td>{((fiveLarge[1] / worlddeaths) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{largeFive[2]}</td>\r\n                                        <td>{fiveLarge[2]}</td>\r\n                                        <td>{((fiveLarge[2] / worlddeaths) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{largeFive[3]}</td>\r\n                                        <td>{fiveLarge[3]}</td>\r\n                                        <td>{((fiveLarge[3] / worlddeaths) * 100).toFixed(2)}</td>\r\n                                    </tr>                           \r\n                                    <tr>\r\n                                        <td>{largeFive[4]}</td>\r\n                                        <td>{fiveLarge[4]}</td>\r\n                                        <td>{((fiveLarge[4] / worlddeaths) * 100).toFixed(2)}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className={styles.charts}>\r\n                            {pieChart}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default DeathsTable;","import React, { Component } from 'react';\r\nimport styles from './NavBar.module.css';\r\n\r\nclass NavigationBar extends Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.body}>\r\n                <nav>\r\n                    <input id=\"nav-toggle\" type=\"checkbox\"></input>\r\n                    <div className={styles.header}>\r\n                        COVID<strong>Tracker</strong>\r\n                    </div> \r\n                    <ul className={styles.links}>\r\n                        <li className={styles.active}><a href=\"#\">Home</a></li>\r\n                        <li className={styles.notactive}><a href=\"https://curiousexpert24.github.io/covidtacker_about/\">About</a></li>\r\n                        <li className={styles.notactive}><a href=\"https://curiousexpert24.github.io/covidtacker_about/safetypage.html\">Safety Tips</a></li>\r\n                    </ul>\r\n                    <label htmlFor=\"nav-toggle\" className={styles.iconB}>\r\n                        <div className={styles.line}></div>\r\n                        <div className={styles.line}></div>\r\n                        <div className={styles.line}></div>\r\n                    </label>\r\n                </nav>\r\n                <div className={styles.container}>\r\n                    <h2>COVID Tracker</h2>\r\n                    <h4>A reliable way to track COVID-19 Cases, Recoveries, and Deaths</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar;\r\n","\r\nimport React from 'react';\r\nimport Typical from 'react-typical'\r\n\r\nimport { Cards, CountryPicker, Chart, ConfirmedTable, RecoveredTable, DeathsTable, NavigationBar } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\nimport image from './covid.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n        <div className={styles.totalContain}>\r\n          <NavigationBar />\r\n          <Cards data={data} />\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n          <Chart data={data} country={country} /> \r\n          <ConfirmedTable />\r\n          <RecoveredTable />\r\n          <DeathsTable />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2GHc8\",\"card\":\"Cards_card__1Pv1h\",\"infected\":\"Cards_infected__7CPsk\",\"recovered\":\"Cards_recovered__39yoV\",\"deaths\":\"Cards_deaths__1f48A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"RecoveredTable_chart__3yLKh\",\"stat\":\"RecoveredTable_stat__2yc4O\",\"contain\":\"RecoveredTable_contain__1GNJp\",\"three\":\"RecoveredTable_three__2pCFz\",\"table\":\"RecoveredTable_table__2WK84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tble\":\"DeathsTable_tble__1OEJn\",\"charts\":\"DeathsTable_charts__RGCOq\",\"stats\":\"DeathsTable_stats__37tyg\",\"containR\":\"DeathsTable_containR__2xAA7\",\"three\":\"DeathsTable_three__1x_JR\",\"tbl\":\"DeathsTable_tbl__1J-Cq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1OuVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1hd4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalContain\":\"App_totalContain__IUYPM\",\"image\":\"App_image__1Zn0t\",\"float\":\"App_float__29VT7\",\"fadeIn\":\"App_fadeIn__20D5s\"};"],"sourceRoot":""}